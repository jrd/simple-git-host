#!/bin/sh
GITUSER="$1"
if [ -z "$SSH_ORIGINAL_COMMAND" ]; then
  USER=$GITUSER
  export USER
  exec git-shell
fi
ispublic() {
  [ -e "$1"/git-daemon-export-ok ]
}
rungitcmd() {
  exec /usr/bin/git-shell -c "$1"
}
error() {
  echo "Error: $1" >&2
  exit 1
}
CMD=$(echo "$SSH_ORIGINAL_COMMAND" | cut -d' ' -f1)
REPO=$(echo "$SSH_ORIGINAL_COMMAND" | sed "s/'//g" | cut -d' ' -f2 | cut -d'/' -f2-)
REPO_DIR="$HOME/repos/$REPO"
PUSHCMD="git-receive-pack"
SSH_COMMAND=$(echo "$SSH_ORIGINAL_COMMAND" | sed "s|$REPO|$REPO_DIR|")
if [ -d "$REPO_DIR" ] && [ -r "$REPO_DIR"/.users ]; then
  if grep -q "^$GITUSER:.*\$" "$REPO_DIR"/.users; then
    RIGHT=$(sed -r -n "/^$GITUSER:/{s/^$GITUSER:(.*)/\1/;p}" "$REPO_DIR"/.users)
    case $RIGHT in
      admin|user)
        # admin and regular user have the same right on the git repo
        rungitcmd "$SSH_COMMAND"
        ;;
      readonly)
        if [ "$CMD" = "$PUSHCMD" ]; then
          # push command is forbidden to readonly users
          error "$GITUSER not authorized to push on $REPO"
        else
          # other commands are allowed
          rungitcmd "$SSH_COMMAND"
        fi
        ;;
      *)
        error "$GITUSER has the unexpected right $RIGHT"
    esac
  else
    if [ "$CMD" != "$PUSHCMD" ] && ispublic "$REPO_DIR"; then
      rungitcmd "$SSH_COMMAND"
    else
      # not a member and the command is push or
      # not a member and the repo is not public
      error "$GITUSER not authorized on $REPO"
    fi
  fi
else
  # will fail as the repo does not exist
  rungitcmd "$SSH_COMMAND"
fi
